@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime

<div id="site-bg" aria-hidden="true"></div>
<div class="page relative">
    
    @if(navVisible)
    {
        <div class="custom-navbar @(showNav ? "show-navbar" : "hide-navbar")">
            <RadzenStack Orientation="Orientation.Horizontal">
                <RadzenButton class="nav-button rz-border-radius-1" Text="About Me" Click="@(() => ScrollTo("about-me"))"/>
                <RadzenButton class="nav-button rz-border-radius-1" Text="Work" Click="@(() => ScrollTo("work"))" />
                <RadzenButton class="nav-button rz-border-radius-1" Text="Projects" Click="@(() => ScrollTo("projects"))"/>
                <RadzenButton class="nav-button rz-border-radius-1" Text="Education" Click="@(() => ScrollTo("school"))"/>
            </RadzenStack>
        </div>
    }
    <main>
        <article class="content px-4" style="overflow: hidden;">
            @Body
        </article>
    </main>
</div>


@code{
    private bool showNav = false;
    private bool navVisible = false;
    private bool isAnimating = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
            await JSRuntime.InvokeVoidAsync("initScrollWatcher", DotNetObjectReference.Create(this));
    }

    [JSInvokable]
    public async Task SetNavBarVisibility(bool show)
    {
        if (isAnimating || show == showNav) return;

        isAnimating = true;

        if (show)
        {
            navVisible = true;
            showNav = true;
            StateHasChanged();
            await Task.Delay(1600); // navbar show animation duration
        }
        else
        {
            showNav = false;
            StateHasChanged();
            await Task.Delay(600); // navbar hide animation duration
            navVisible = false;
            StateHasChanged();
        }

        isAnimating = false;
    }

    private async Task ScrollTo(string sectionId)
    {
        await JSRuntime.InvokeVoidAsync("scrollToSection", sectionId );
    }
}