@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime

<div class="page">
    @if(navVisible)
    {
        <div class="custom-navbar @(showNav ? "show-navbar" : "hide-navbar")">
            <RadzenButton class="nav-button" Text="About Me" Style="" />
            <RadzenButton class="nav-button" Text="Work" Style="" />
            <RadzenButton class="nav-button" Text="Education"/>
            <RadzenButton class="nav-button" Text="Projects"/>
        </div>
    }
    <main>
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>


@code{
    private bool showNav = false;
    private bool navVisible = false;
    private bool isAnimating = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
            await JSRuntime.InvokeVoidAsync("initScrollWatcher", DotNetObjectReference.Create(this));
    }

    [JSInvokable]
    public async Task SetNavBarVisibility(bool show)
    {
        if (isAnimating || show == showNav) return;

        isAnimating = true;

        if (show)
        {
            navVisible = true;
            showNav = true;
            StateHasChanged();
            await Task.Delay(1600); // navbar show animation duration
        }
        else
        {
            showNav = false;
            StateHasChanged();
            await Task.Delay(600); // navbar hide animation duration
            navVisible = false;
            StateHasChanged();
        }

        isAnimating = false;
    }

}